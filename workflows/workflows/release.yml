# Package Node.js project into executable and auto-upload binary release assets
# with windows-latest runner

name: Release

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest

    strategy:
      matrix:
        platform: [linux, win, alpine, macos]
        arch: [x64, x86]
        exclude:
          # excludes x86 on linux, alpine and macos
          - arch: x86
            platform: linux
          - arch: x86
            platform: alpine
          - arch: x86
            platform: macos
      fail-fast: false

    env:
      APP: takenote
      NODE_RANGE: node14
      PLATFORM: ${{ matrix.platform }}
      ARCH: ${{ matrix.arch }}

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Install "zip" for Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          mkdir zip
          curl -LOJ http://downloads.sourceforge.net/gnuwin32/zip-3.0-bin.zip --output-dir zip
          curl -LOJ http://downloads.sourceforge.net/gnuwin32/bzip2-1.0.5-bin.zip --output-dir zip
          unzip -jq zip/zip*.zip "bin/zip.exe" -d zip
          unzip -jq zip/bzip2*.zip "bin/bzip2.dll" -d zip

          # Add "zip" to PATH
          export _PATH=$PATH:$PWD/zip
          echo "PATH=$_PATH" >> $GITHUB_ENV
        shell: bash

      - name: Set environment variables
        run: |
          # Set "artifact name" and "asset name"
          if [ "$PLATFORM" = "win" ]; then
            export _ARTIFACT_NAME="${APP}.exe"
          else
            export _ARTIFACT_NAME=$APP
          fi

          export _ASSET_NAME="${APP}_${PLATFORM}_${ARCH}"

          echo "ARTIFACT_NAME=$_ARTIFACT_NAME" >> $GITHUB_ENV
          echo "ASSET_NAME=$_ASSET_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm install
        shell: bash

      - name: Install "pkg"
        run: npm install -g pkg
        shell: bash

      - name: Package Node.js project into an executable (${{ matrix.platform }}_${{ matrix.arch }})
        run: |
          mkdir build_assets
          pkg . -t ${{ env.NODE_RANGE }}-${{ env.PLATFORM }}-${{ env.ARCH }} --output build_assets/${{ env.ARTIFACT_NAME }}
        shell: bash

      - name: Create archive files
        run: |
          mkdir release
          if [ "${{ env.PLATFORM }}" = "win" ]; then
            zip -j release/${{ env.ASSET_NAME }}.zip build_assets/${{ env.ARTIFACT_NAME }}
          else
            tar -zcvf release/${{ env.ASSET_NAME }}.tar.gz -C build_assets ${{ env.ARTIFACT_NAME }}
          fi
        shell: bash

      - name: Upload binary files to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
          path: build_assets/${{ env.ARTIFACT_NAME }}

      - name: Upload binary files to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: release/${{ env.ASSET_NAME }}.*
          tag: v0.01
          overwrite: true
